<style lang="less">
page {
  /*background: #f7f7f7;*/
  /*font-family: -apple-system-font, "Helvetica Neue", SimSun;*/
  font-family: Helvetica Neue, Helvetica, sans-serif;
}

.ac {
  align-items: center;
}

.white {
  color: white;
}

.bg-linear {
  background-image: linear-gradient(75deg, #f89218 0%, #ff760c 100%) !important;
}

.loading {
  width: 100%;
  padding-bottom: 36rpx;
  align-items: flex-end;
  justify-content: center;
  box-sizing: border-box;
  background: transparent;
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity 1s;
}

.fade-enter,
.fade-leave-to {
  opacity: 0;
}

.van-nav-bar__left {
  height: 44px;
  align-items: center;
}

.van-icon-arrow-left {
  color: #000 !important;
  font-size: 20px !important;
}

.van-stepper {
  align-items: center;
}

button::after {
  border: none;
}

input {
  font-size: 28rpx;
}

view {
  display: flex;
}

image {
  max-width: 100%;
  display: inline-block;
  position: relative;
  z-index: 0;
}

image.loading::before {
  content: '';
  background-color: #f5f5f5;
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -2;
}

image.loading::after {
  content: '\e7f1';
  font-family: 'cuIcon';
  position: absolute;
  top: 0;
  left: 0;
  width: 32 upx;
  height: 32 upx;
  line-height: 32 upx;
  right: 0;
  bottom: 0;
  z-index: -1;
  font-size: 32 upx;
  margin: auto;
  color: #ccc;
  -webkit-animation: cuIcon-spin 2s infinite linear;
  animation: cuIcon-spin 2s infinite linear;
  display: block;
}

::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent;
  display: none;
}

.van-icon,
.van-icon:before {
  justify-content: center;
  display: flex !important;
}

.container {
  width: 100%;
  overflow: hidden;
  flex-direction: column;
  align-items: center;
  box-sizing: border-box;
}

.icon-lg {
  height: 66rpx;
  width: 66rpx;
}

.icon-l {
  height: 56rpx;
  width: 56rpx;
}

.icon {
  height: 46rpx;
  width: 46rpx;
}

.icon-sm {
  width: 36rpx;
  height: 36rpx;
}

.icon-xs {
  width: 26rpx;
  height: 26rpx;
}

.ellipsis {
  text-overflow: ellipsis;
  word-break: break-all;
  -webkit-line-clamp: 1;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  white-space: normal;
}

.backdrop {
  background: rgba(0, 0, 0, 0.4);
  position: fixed;
  z-index: 1000;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
}
</style>

<script>
import wepy from '@wepy/core';
// import eventHub from './common/eventHub'
import util from './utils/util';

wepy.app({
  hooks: {
    // App 级别 hook，对整个 App 生效
    // 同时存在 Page hook 和 App hook 时，优先执行 Page hook，返回值再交由 App hook 处
    'before-setData': function(dirty) {
      console.log('setData dirty: ', dirty);
      return dirty;
    }
  },
  globalData: {
    userInfo: null,
    imgDomain: 'http://jiehuo.oss-cn-shenzhen.aliyuncs.com/',
    mapKey: 'F5XBZ-PFWRK-DFZJJ-AOK7V-HPAEF-ELBZM',
    current_area: null,
    SystemInfo: null,
    isIPhoneX: false,
    StatusBarHeight: 50
  },

  onLaunch() {
    // this.testAsync()
    // eventHub.$on('app-launch', (...args) => {
    //   console.log('app-launch event emitted, the params are:')
    //   console.log(args)
    // })
    this.$options.globalData.userInfo = wx.getStorageSync('userInfo');
    this.getLocation();
    //  check session
    wx.checkSession({
      fail: function() {
        wx.login({
          success(login) {
            // get the login res
            if (login.errMsg === 'login:ok') {
              let data = {};
              data.type = 'checkSession';
              data.code = login.code;
              util.wxRequest('/login-mini-app', data, 'POST').then(res => {
                if (res.result) {
                  this.$options.globalData.userInfo = res.result.user;
                  wx.setStorageSync('userInfo', res.result.user);
                  wx.setStorageSync(
                    'authorization',
                    'Bearer ' + res.result.token
                  );
                }
              });
            }
          }
        });
      }
    });
    let systemInfo = wx.getSystemInfoSync();
    this.$options.globalData.SystemInfo = systemInfo;
    this.$options.globalData.StatusBarHeight = systemInfo.statusBarHeight;
    let iphoneNew =
      /iPhone11/i.test(systemInfo.model) && systemInfo.screenHeight === 812;
    this.$options.globalData.isIPhoneX =
      /iphone x/i.test(systemInfo.model) || iphoneNew;
  },

  methods: {
    getLocation() {
      let _this = this;
      let timestamp = Math.ceil(new Date().valueOf() / 1000);
      let currentArea = wx.getStorageSync('current_area');
      // 已存储位置，并且存储的位置1天内有效
      if (currentArea && currentArea.timestamp > timestamp - 60 * 60 * 24) {
        this.$options.globalData.current_area = currentArea;
        return;
      }
      let url =
        'https://apis.map.qq.com/ws/geocoder/v1/?get_poi=1&key=' +
        this.$options.globalData.mapKey;
      wx.getLocation({
        type: 'gcj02',
        altitude: true,
        success(res) {
          // 获取附近位置信息
          url += '&location=' + res.latitude + ',' + res.longitude;
          // api根据经纬度查询附近地点
          util.wxRequest(url).then(res => {
            currentArea = res.result.pois[0];
            currentArea = { ...currentArea, timestamp };
            wx.setStorageSync('current_area', currentArea);
            _this.$options.globalData.current_area = currentArea;
          });
        },
        fail(res) {
          util.toast('获取地理位置失败!');
        }
      });
    }
  }
});
</script>
<config>
  {
    pages: [
      'pages/home/index',
      'pages/category/index',
      'pages/shoppingCart/index',
      'pages/mine/index',
      'pages/other/login',
      'pages/other/protocol',
      'pages/other/location',
      'pages/other/webview'
    ],
    subPackages: [{
      'root': 'packageGoods',
      'name': 'packageGoods',
      'pages': [
        'cateGoods/index',
        'goods/detail',
        'goodsList/index',
        'order/confirm',
        'order/detail',
        'preSaleGoods/index',
        'spellGroup/index'
      ]
    }
    ],
    permission: {
      'scope.userLocation': {
        'desc': '您的位置信息将用于获取门店'
      }
    },
    window: {
      navigationStyle: 'custom',
      backgroundColorTop: '#ffffff',
      backgroundTextStyle: 'dark',
      backgroundColorBottom: '#f3f4f5',
      navigationBarBackgroundColor: 'white',
      navigationBarTitleText: '超时连锁小店',
      navigationBarTextStyle: 'black',
      enablePullDownRefresh: true
    },
    tabBar: {
      color: '#999',
      selectedColor: '#fe8824',
      backgroundColor: '#fff',
      borderStyle: 'black',
      list: [{
        pagePath: 'pages/home/index',
        iconPath: '/images/tabBar/home.png',
        selectedIconPath: '/images/tabBar/home_active.png',
        text: '首页'
      }, {
        pagePath: 'pages/category/index',
        iconPath: '/images/tabBar/category.png',
        selectedIconPath: '/images/tabBar/category_active.png',
        text: '分类'
      }, {
        pagePath: 'pages/shoppingCart/index',
        iconPath: '/images/tabBar/shopping_cart.png',
        selectedIconPath: '/images/tabBar/shopping_cart_active.png',
        text: '购物车'
      }, {
        pagePath: 'pages/mine/index',
        iconPath: '/images/tabBar/mine.png',
        selectedIconPath: '/images/tabBar/mine_active.png',
        text: '我的'
      }]
    },
    usingComponents: {
      'van-nav-bar': 'module:vant-weapp/lib/nav-bar/index'
    },
    networkTimeout: {
      'request': 10000,
      'downloadFile': 10000
    },
    debug: true
  }
</config>
